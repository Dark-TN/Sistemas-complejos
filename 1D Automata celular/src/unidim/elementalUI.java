/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unidim;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.concurrent.LinkedBlockingDeque;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.JViewport;
import javax.swing.SwingUtilities;

/**
 *
 * @author jedua
 */
public class elementalUI extends javax.swing.JFrame implements Runnable {
    private boolean running;
    private Thread game;
    private simLogic board;
    private int size = 40;
    private int gens  = 0;
    private boolean autoScroll;
    private final Dialogs dialogs = new Dialogs();
    /**
     * Creates new form elementalUI
     */
    public elementalUI() {
        LinkedBlockingDeque<Cell> initial = new LinkedBlockingDeque<Cell>();
        /*
        initial.addFirst(new Cell(0,0));
        initial.addFirst(new Cell(99,0));
        */
        board = new simLogic(initial,size);
        initComponents();
        board.setRule(106);
        board.addMouseListener(ma);
		board.addMouseMotionListener(ma);
        dialogs.setSpeed(400);
        dialogs.setPercentage(50);
        
        mainContent.getVerticalScrollBar().addAdjustmentListener(new AdjustmentListener() {  
        public void adjustmentValueChanged(AdjustmentEvent e) { 
            if(autoScroll)
            e.getAdjustable().setValue(e.getAdjustable().getMaximum());  
        }
    });
    }
    
    @Override
	public void run() {
		gens = 0;
		//if (dialogs.getGenerations() == -1) toggleRunButton.setText("Inicio");
		//else running = true;
        running  = true;
		while (running) {
			//if (gens == dialogs.getGenerations() - 1) stopRunning();
            gens++;
            board.simulate();
            board.setPreferredSize(new Dimension(0,(int)(11.04 * board.gameBoardSize.height)));
            mainContent.setViewportView(board);
			try {
				Thread.sleep(10000 / dialogs.getSpeed());
			} catch(InterruptedException e) {}
		}
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlsPanel = new javax.swing.JPanel();
        runningToggle = new javax.swing.JToggleButton();
        resetButton = new javax.swing.JButton();
        changeRule = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        mainContent = new javax.swing.JScrollPane(board);
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        sizeChangeMenuItem = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(480, 480));
        setMinimumSize(new java.awt.Dimension(480, 480));
        setPreferredSize(new java.awt.Dimension(480, 800));

        runningToggle.setText("Inicio");
        runningToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runningToggleActionPerformed(evt);
            }
        });
        controlsPanel.add(runningToggle);

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        controlsPanel.add(resetButton);

        changeRule.setText("Regla");
        changeRule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeRuleActionPerformed(evt);
            }
        });
        controlsPanel.add(changeRule);

        jButton1.setText("Velocidad");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        controlsPanel.add(jButton1);

        getContentPane().add(controlsPanel, java.awt.BorderLayout.PAGE_END);

        mainContent.setAutoscrolls(true);
        getContentPane().add(mainContent, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Archivo");

        sizeChangeMenuItem.setText("Cambiar Tama√±o");
        sizeChangeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeChangeMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(sizeChangeMenuItem);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Generar Random");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void runningToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runningToggleActionPerformed
        // TODO add your handling code here:
        //System.out.println(evt.getActionCommand());
        switch (evt.getActionCommand()) {
        case "Inicio":
			runningToggle.setText("Alto");
			game = new Thread(elementalUI.this);
			game.start();
            autoScroll = true;
			break;
		case "Alto":
			runningToggle.setText("Inicio");
            running = false;
            autoScroll = false;
		default:
			break;
        }
    }//GEN-LAST:event_runningToggleActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        gens = 0;
        board.clearWorld();
        if (runningToggle.getText() == "Alto") {
            runningToggle.setText("Inicio");
            running = false;
            autoScroll = false;
        }
        JScrollBar vertical = mainContent.getVerticalScrollBar();
        vertical.setValue(vertical.getMinimum());
    }//GEN-LAST:event_resetButtonActionPerformed

    private void sizeChangeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeChangeMenuItemActionPerformed
        int newSize = Integer.parseInt(JOptionPane.showInputDialog(this, dialogs.newSizeDialog(), board.getBoardSize()));
        board.setBoardSize(newSize);
        gens = 0;
        board.clearWorld();
    }//GEN-LAST:event_sizeChangeMenuItemActionPerformed

    private void changeRuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeRuleActionPerformed
        int newRule = Integer.parseInt(JOptionPane.showInputDialog(this, dialogs.newSizeDialog(), board.getRule()));
        board.setRule(newRule);
        gens = 0;
        board.clearWorld();
    }//GEN-LAST:event_changeRuleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, dialogs.newSpeedDialog(), "Velocidad de Simulacion", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, dialogs.newRandDialog(), "Porcentaje de Semilla", JOptionPane.INFORMATION_MESSAGE);
        gens = 0;
        board.clearWorld();
        board.randomSeed(dialogs.getPercentage());
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(elementalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(elementalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(elementalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(elementalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new elementalUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton changeRule;
    private javax.swing.JPanel controlsPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane mainContent;
    private javax.swing.JButton resetButton;
    private javax.swing.JToggleButton runningToggle;
    private javax.swing.JMenuItem sizeChangeMenuItem;
    // End of variables declaration//GEN-END:variables
    // Mouse Adapter
    MouseAdapter ma = new MouseAdapter() {
        private Point origin;
        @Override public void mouseMoved(MouseEvent e) { origin = null; }
        @Override public void mousePressed(MouseEvent e) { if (SwingUtilities.isMiddleMouseButton(e)) origin = new Point(e.getPoint());	}
        @Override
		public void mouseReleased(MouseEvent e) {
			if (SwingUtilities.isRightMouseButton(e)) {
				if(!running && gens == 0) board.removeClickedCell(e);
			}
			if (SwingUtilities.isLeftMouseButton(e)) {
				if(!running && gens == 0) board.addClickedCell(e);
			}
		}
        @Override
		public void mouseDragged(MouseEvent e) {
			if (origin != null) {
				JViewport viewPort = mainContent.getViewport();
				if (viewPort != null) {
					int deltaX = origin.x - e.getX();
					int deltaY = origin.y - e.getY();
					Rectangle view = viewPort.getViewRect();
					view.x += deltaX;
					view.y += deltaY;
					board.scrollRectToVisible(view);
				}
			} else if (SwingUtilities.isLeftMouseButton(e)) {
                //board.clearWorld();
				if(!running && gens == 0) board.addClickedCell(e);
			} else if (SwingUtilities.isRightMouseButton(e)) {
                //board.clearWorld();
				if(!running && gens == 0) board.removeClickedCell(e);
			}
		}
	};
}
